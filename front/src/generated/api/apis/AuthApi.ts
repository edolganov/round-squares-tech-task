/* tslint:disable */
/* eslint-disable */
/* eslint-disable */
// @ts-nocheck
/**
* P2EX API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


import * as runtime from '../runtime';
import type {
  LoginReq,
  LoginResp,
} from '../models/index';
import {
    LoginReqFromJSON,
    LoginReqToJSON,
    LoginRespFromJSON,
    LoginRespToJSON,
} from '../models/index';

export interface AuthConfirmAuthRequest {
    loginReq: LoginReq;
}

/**
 * AuthApi - interface
 * 
 * @export
 * @interface AuthApiInterface
 */
export interface AuthApiInterface {
    /**
     * 
     * @summary Login to system
     * @param {LoginReq} loginReq 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApiInterface
     */
    authConfirmAuthRaw(requestParameters: AuthConfirmAuthRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LoginResp>>;

    /**
     * Login to system
     */
    authConfirmAuth(loginReq: LoginReq, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LoginResp>;

}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI implements AuthApiInterface {

    /**
     * Login to system
     */
    async authConfirmAuthRaw(requestParameters: AuthConfirmAuthRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LoginResp>> {
        if (requestParameters['loginReq'] == null) {
            throw new runtime.RequiredError(
                'loginReq',
                'Required parameter "loginReq" was null or undefined when calling authConfirmAuth().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/auth/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LoginReqToJSON(requestParameters['loginReq']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LoginRespFromJSON(jsonValue));
    }

    /**
     * Login to system
     */
    async authConfirmAuth(loginReq: LoginReq, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LoginResp> {
        const response = await this.authConfirmAuthRaw({ loginReq: loginReq }, initOverrides);
        return await response.value();
    }

}
